{
  "openapi": "3.0.1",
  "info": {
    "title": "Truck Visit Management",
    "description": "This document contains the functional and technical specifications of the Truck Visit Management API. The API calls are designed to facilitate the Truck Visit Management’s Freight Management scope, which is limited to the Digital Handover Right creation and update process.",
    "termsOfService": "https://www.nallian.com/",
    "version": "DEC 2022"
  },
  "servers": [
    {
      "url": "https://{community}-prd.nallian.io/api/tvm",
      "description": "PRD - Production Environment",
      "variables": {
        "community": {
          "enum": [
            "tenant1",
            "tenant2"
          ],
          "default": "tenant1",
          "description": "Nallian has multiple domains for every application, specified by the community/tenant."
        }
      }
    },
    {
      "url": "https://{community}-stg.nallian.io/api/tvm",
      "description": "STG - Staging Environment",
      "variables": {
        "community": {
          "enum": [
            "demo"
          ],
          "default": "demo",
          "description": "Nallian has multiple domains for every application, specified by the community/tenant."
        }
      }
    }
  ],
  "paths": {
    "/v1/connect/digital-rights/pick-up": {
      "post": {
        "operationId": "",
        "summary": "Create pickup digital handling right",
        "description": "The purpose of the “Create Digital Handover Right” call is to generate a handover right for a (group of) cargo object(s), assigned to a capacity booker and used to schedule a visit for this handover in TVM.",
        "tags": [
          "DigitalRights"
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalRights"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalRightsId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/CommonError"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No relation found for provided Actors"
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/v1/connect/digital-rights/drop-off": {
      "post": {
        "summary": "Create dropoff digital handling right",
        "description": "The purpose of the “Create Digital Handover Right” call is to generate a handover right for a (group of) cargo object(s), assigned to a capacity booker and used to schedule a visit for this handover in TVM.",
        "tags": [
          "DigitalRights"
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalRights"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DigitalRightsId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/CommonError"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "No relation found for provided Actors"
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/v1/connect/digital-rights/{digitalRightId}": {
      "put": {
        "summary": "Update digital handling right",
        "description": "The purpose of the “Update Digital Handover Right” call is to change a handover right for a (group of) cargo object(s), assigned to a capacity booker and used to schedule a visit for this handover in TVM. By updating this D.R., the integrator can indicate a status transition (for example confirm a handover) and/or update the content (for example the underlying cargo objects and their formation).",
        "tags": [
          "DigitalRights"
        ],
        "parameters": [
          {
            "name": "digitalRightId",
            "in": "path",
            "description": "Id of digital right that is updated",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalRights"
              }
            }
          }
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/ProcessingId"
          },
          "400": {
            "$ref": "#/components/responses/CommonError"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Message validation error"
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/v1/connect/input-errors/{processingId}": {
      "get": {
        "summary": "Retrieve processing error",
        "description": "The purpose of the input-error is to retrieve processing errors of the digital right creation/update.",
        "tags": [
          "DigitalRights"
        ],
        "parameters": [
          {
            "name": "processingId",
            "in": "path",
            "description": "Processing Id of digital right creation/update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/v1/connect/identification/capacity-bookers": {
      "get": {
        "summary": "Retrieve capacity bookers",
        "description": "The purpose of the “Get Capacity Bookers” call is to retrieve a list of identification codes for all known Capacity Bookers (truckers, forwarders, etc..) who are allowed to pick-up/drop-off cargo handover rights using TVM in a specific community/station (tenant). This list will provide a universal identification method & value for every capacity booker which can be used to identify Organisations between the two integrating systems.",
        "tags": [
          "Organisations"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisations"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/v1/connect/identification/capacity-suppliers": {
      "get": {
        "summary": "Retrieve capacity suppliers",
        "description": "Provide a list of capacity suppliers to be used in the digital right creation",
        "tags": [
          "Organisations"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisations"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/v1/connect/lookups/digital-right-states": {
      "get": {
        "summary": "Retrieve digital right states",
        "description": "Provide a list of digital right state and their corresponding name.",
        "tags": [
          "Lookup"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 22,
                    "name": "Expected"
                  },
                  {
                    "id": 23,
                    "name": "Temporarily blocked"
                  },
                  {
                    "id": 24,
                    "name": "Available for handover"
                  },
                  {
                    "id": 25,
                    "name": "Unavailable/void"
                  },
                  {
                    "id": 26,
                    "name": "Handover complete"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/v1/connect/lookups/digital-right-types": {
      "get": {
        "summary": "Retrieve digital right types",
        "description": "Provide a list of digital right type and their corresponding name.",
        "tags": [
          "Lookup"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 13,
                    "name": "Intact Uld"
                  },
                  {
                    "id": 14,
                    "name": "Loose Cargo"
                  },
                  {
                    "id": 15,
                    "name": "Pallet Stack"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    },
    "/v1/connect/lookups/handover-types": {
      "get": {
        "summary": "Retrieve digital right handover types",
        "description": "Provide a list of digital handover right type and their corresponding name.",
        "tags": [
          "Lookup"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 11,
                    "name": "Pick-up"
                  },
                  {
                    "id": 12,
                    "name": "Delivery"
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "access_token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "DigitalRights": {
        "type": "object",
        "additionalProperties": false,
        "x-stoplight": {
          "id": "a6c7b53cf47b6"
        },
        "properties": {
          "externalReference": {
            "type": "string",
            "description": "External reference used to identify the digital right in the external application. External reference must be unique."
          },
          "rightState": {
            "type": "string",
            "description": "String representing the code of the state. If rightStateId is present in the request, value from rightStateId override the rigthState",
            "enum": [
              "expected",
              "available",
              "complete"
            ]
          },
          "rightStateId": {
            "type": "integer",
            "description": "Id to represent the state of the digital right. The possible value comes from the dight-right-states lookup API. rightState properties can be used to send state as a string"
          },
          "totalPieces": {
            "type": "integer"
          },
          "totalWeight": {
            "type": "number",
            "description": "The total weight. The unit of measurement is assumed to be kg."
          },
          "volume": {
            "type": "number",
            "description": "The volume of the shipment or the uld. The unit of measurement is assume to be m³."
          },
          "length": {
            "type": "number",
            "description": "The length of the shipment or the uld. The unit of measurement is assume to be m. When the length is present, height and width are mandatory"
          },
          "height": {
            "type": "number",
            "description": "The height of the shipment or the uld. The unit of measurement is assume to be m. When the height is present, length and width are mandatory"
          },
          "width": {
            "type": "number",
            "description": "The width of the shipment or the uld. The unit of measurement is assume to be m. When the width is present, length and height are mandatory"
          },
          "assignee": {
            "type": "object",
            "description": "A Digital handling right is always created for an Assignee, who is assigned the (Digital) Right to plan and execute the handover within TVM. The assignee do not change throughout the FM process. As a result, the assignee has (viewing) access throughout the full operation process in TVM.",
            "properties": {
              "nallianId": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "capacitySupplier": {
            "type": "object",
            "description": "The digital handling right capacity/slot Supplier is the Actor who facilitates the physical handover process and therefore provides the capacity to schedule a visit for this handover within TVM.",
            "properties": {
              "nallianId": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "airShipments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AirShipments"
            }
          },
          "ulds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ulds"
            }
          }
        },
        "required": [
          "externalReference",
          "rightStateId",
          "totalPieces",
          "totalWeight",
          "assignee",
          "capacitySupplier"
        ]
      },
      "DigitalRightsId": {
        "type": "object",
        "properties": {
          "rightId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "x-stoplight": {
          "id": "74035d5add35a"
        }
      },
      "Organisations": {
        "type": "object",
        "properties": {
          "nallianId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "identificationCodes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        },
        "additionalProperties": false,
        "x-stoplight": {
          "id": "deb25e3ac6e86"
        }
      },
      "AirShipments": {
        "type": "object",
        "additionalProperties": false,
        "x-stoplight": {
          "id": "b344cfe7eebbd"
        },
        "properties": {
          "mawb": {
            "$ref": "#/components/schemas/Mawbs"
          },
          "shipmentReference": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "flights": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flights"
            }
          },
          "volume": {
            "type": "number"
          },
          "length": {
            "type": "number"
          },
          "height": {
            "type": "number"
          },
          "width": {
            "type": "number"
          },
          "sphs": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 3,
              "maxLength": 3
            }
          },
          "pieces": {
            "type": "integer"
          },
          "weight": {
            "type": "number"
          },
          "extraInformation": {
            "type": "object",
            "properties": {
              "chargesPayed": {
                "type": "boolean"
              },
              "customsReleased": {
                "type": "boolean"
              },
              "readyForRelease": {
                "type": "boolean"
              }
            }
          },
          "hawbs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Hawbs"
            }
          }
        },
        "required": [
          "shipmentReference",
          "pieces",
          "weight",
          "mawb"
        ]
      },
      "Flights": {
        "required": [
          "flightNumber"
        ],
        "type": "object",
        "properties": {
          "sta": {
            "type": "string",
            "format": "date-time"
          },
          "std": {
            "type": "string",
            "format": "date-time"
          },
          "flightNumber": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-stoplight": {
          "id": "b40f07a51ef5c"
        }
      },
      "Hawbs": {
        "type": "object",
        "additionalProperties": false,
        "x-stoplight": {
          "id": "4b23bc1e557b9"
        },
        "properties": {
          "hawbNumber": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "pieces": {
            "type": "integer"
          },
          "weight": {
            "type": "number"
          },
          "sphs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "hawbNumber",
          "origin",
          "destination"
        ]
      },
      "Mawbs": {
        "type": "object",
        "additionalProperties": false,
        "x-stoplight": {
          "id": "0b229739bfc2e"
        },
        "properties": {
          "mawbNumber": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          },
          "externalReference": {
            "type": "string"
          },
          "pieces": {
            "type": "integer"
          },
          "weight": {
            "type": "number"
          },
          "sphs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agent": {
            "type": "object",
            "description": "Forwarder ID. The forwarder ID must be on of the capacity-bookers",
            "properties": {
              "nallianId": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "required": [
          "mawbNumber",
          "origin",
          "destination",
          "pieces"
        ]
      },
      "Ulds": {
        "type": "object",
        "additionalProperties": false,
        "x-stoplight": {
          "id": "8c27d356f4825"
        },
        "properties": {
          "externalReference": {
            "type": "string"
          },
          "uldSerialNumber": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "uldCode": {
            "type": "string"
          },
          "uldType": {
            "type": "string"
          },
          "isPallet": {
            "type": "boolean"
          }
        },
        "required": [
          "uldSerialNumber",
          "prefix",
          "uldCode"
        ]
      }
    },
    "responses": {
      "CommonError": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "nullable": true
                },
                "key": {
                  "type": "string",
                  "nullable": true
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "ProcessingId": {
        "description": "Processing Id",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "format": "uuid",
              "properties": {
                "processingId": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oauth2_production": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {
              "grant_type": "The OAuth 2.0 grant type that the connected app requests. The value must be password for this flow",
              "client_id": "The connected app’s consumer key, which you can find on the connected app’s Manage Connected Apps page or from the connected app’s definition.",
              "client_secret": "The connected app’s consumer secret, which you can find on the connected app’s Manage Connected Apps page or from the connected app’s definition.",
              "username": "The username of the user that the connected app is imitating.",
              "password": "The password of the user that the connected app is imitating."
            },
            "tokenUrl": "https://sts.nallian.io/connect/token"
          }
        },
        "description": "Request access token (PRD)"
      },
      "oauth2_stage": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {
              "grant_type": "The OAuth 2.0 grant type that the connected app requests. The value must be password for this flow",
              "client_id": "The connected app’s consumer key, which you can find on the connected app’s Manage Connected Apps page or from the connected app’s definition.",
              "client_secret": "The connected app’s consumer secret, which you can find on the connected app’s Manage Connected Apps page or from the connected app’s definition.",
              "username": "The username of the user that the connected app is imitating.",
              "password": "The password of the user that the connected app is imitating."
            },
            "tokenUrl": "https://sts-stg.nallian.io/connect/token"
          }
        },
        "description": "Request access token (STG)"
      },
      "access_token": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "DigitalRights",
      "description": "endpoints to create/update digital handling right"
    },
    {
      "name": "Organisations",
      "description": "Endpoint to retrieve nallianId of organisation"
    },
    {
      "name": "Lookup",
      "description": "endpoints to retrieve type description"
    }
  ],
  "security": [
    {
      "access_token": []
    }
  ]
}